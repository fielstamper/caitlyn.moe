<div id="aniList-grid"><slot /></div>

<script>
	import { ANILIST_USER } from "../constants";

	document.addEventListener("astro:page-load", () => {
		fetch("https://graphql.anilist.co", {
			method: "POST",
			headers: { "content-type": "application/json" },
			body: JSON.stringify({
				query: `{
            Page(perPage: 50) {
                activities(userId: ${ANILIST_USER}, type: MEDIA_LIST, sort: ID_DESC) {
                    ... on ListActivity {
                        media {
                            siteUrl
                            title { romaji }
                            coverImage { extraLarge }
                            type
                        }
                        status progress createdAt
                    }
                }
            }
        }`,
			}),
		})
			.then((response) => response.json())
			.then((jsonData) => {
				console.log(jsonData);
				const aniListGrid = document.getElementById("aniList-grid")!;
				const mangas = jsonData.data.Page.activities.slice(0, 5);

				for (const manga of mangas) {
					const mangaAnchor = document.createElement("a");
					mangaAnchor.classList.add("mangaAnchor");

					const mangaURL = document.createElement("p");
					mangaURL.textContent = manga.media.siteUrl;

					const mangaCover = document.createElement("img");
					mangaCover.src = manga.media.coverImage.extraLarge;
					mangaCover.classList.add("mangaCover");

					mangaAnchor.setAttribute("href", manga.media.siteUrl);

					function capitaliseFirstLetter(name: string): string {
						return name.charAt(0).toUpperCase() + name.slice(1);
					}

					const mangaStatus = document.createElement("span");
					mangaStatus.textContent =
						capitaliseFirstLetter(manga.status) + " ";

					const mangaChapter = document.createElement("span");
					mangaChapter.textContent = manga.progress;

					const mangaTitle = document.createElement("p");
					mangaTitle.textContent = manga.media.title.romaji;
					mangaTitle.classList.add("mangaTitle");

					const mangaTextFront = document.createElement("p");
					mangaTextFront.append(mangaStatus, mangaChapter);
					mangaTextFront.classList.add("mangaTextFront");

					const mangaText = document.createElement("p");
					mangaText.append(mangaTextFront, mangaTitle);
					mangaText.classList.add("mangaText");

					mangaAnchor.append(mangaCover, mangaText);
					aniListGrid.append(mangaAnchor);
				}
			});
	});
</script>

<style is:global>
	.mangaText {
		opacity: 100%;
		transition: all 0.25s cubic-bezier(0.17, 0.85, 0.29, 0.95);
	}

	.mangaText:hover {
		opacity: 50%;
		cursor: pointer;
	}
	#aniList-grid {
		display: flex;
		width: 50em;
		overflow: hidden;
		text-align: center;
		gap: 20px;
		justify-content: space-between;
	}

	@media (max-width: 768px) {
		#aniList-grid {
			overflow-x: scroll;
			width: 100%;
			padding-left: 10px;
		}
	}

	.mangaTextFront {
		color: var(--manga-text);
		font-size: 16px;
		text-decoration: none;
	}

	.mangaAnchor {
		height: 100%;
		width: 125px;
	}

	.mangaAnchor:hover {
		cursor: default;
	}

	.mangaTitle {
		color: var(--artist-name);
		font-size: 14px;
	}

	.mangaAnchor img {
		height: 202.249px;
		width: 125px;
		border-radius: 8px;
		transition: all 0.25s cubic-bezier(0.17, 0.85, 0.29, 0.95);
		opacity: 100%;
	}

	.mangaAnchor img:hover {
		background-color: var(--hover-opacity);
		opacity: 40%;
		cursor: pointer;
	}

	@media (max-width: 768px) {
		.mangaAnchor img {
			height: 161px;
			width: 100px;
		}
	}
</style>
